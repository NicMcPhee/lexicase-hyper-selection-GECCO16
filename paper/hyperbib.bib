@Article{Helmuth:2014:ieeeTEC,
  author =       "Thomas Helmuth and Lee Spector and James Matheson",
  title =        "Solving Uncompromising Problems with Lexicase
                 Selection",
  year =         {2014},
  journal =      "IEEE Transactions on Evolutionary Computation",
  note =         "Accepted for future publication",
  keywords =     "genetic algorithms, genetic programming, parent
                 selection, lexicase selection, tournament selection,
                 PushGP",
  ISSN =         "1089-778X",
  doi =          "doi:10.1109/TEVC.2014.2362729",
  size =         "14 pages",
  abstract =     "We describe a broad class of problems, called
                 uncompromising problems, characterised by the
                 requirement that solutions must perform optimally on
                 each of many test cases. Many of the problems that have
                 long motivated genetic programming research, including
                 the automation of many traditional programming tasks,
                 are uncompromising. We describe and analyse the
                 recently proposed lexicase parent selection algorition
                 and show that it can facilitate the solution of
                 uncompromising problems by genetic programming. Unlike
                 most traditional parent selection techniques, lexicase
                 selection does not base selection on a fitness value
                 that is aggregated over all test cases; rather, it
                 considers test cases one at a time in random order. We
                 present results comparing lexicase selection to more
                 traditional parent selection methods, including
                 standard tournament selection and implicit fitness
                 sharing, on four uncompromising problems: finding terms
                 in finite algebras, designing digital multipliers,
                 counting words in files, and performing symbolic
                 regression of the factorial function. We provide
                 evidence that lexicase selection maintains higher
                 levels of population diversity than other selection
                 methods, which may partially explain its utility as a
                 parent selection algorithm in the context of
                 uncompromising problems.",
  notes =        "also known as \cite{6920034}",
}

@incollection{Helmuth:2015:GPTP,
	author = {Thomas Helmuth and Nicholas Freitag McPhee and Lee Spector},
	title = {Lexicase selection for program synthesis: a diversity analysis},
	booktitle = {Genetic Programming Theory and Practice XIII},
	date = {2015},
	editor = {?},
	series = {Genetic and Evolutionary Computation},
	publisher = {Springer},
	pubstate = {In press}
}

@phdthesis{Helmuth:2015:dissertation,
	author = {Thomas Helmuth},
	title = {General Program Synthesis from Examples Using Genetic Programming with Parent Selection Based on Random Lexicographic Orderings of Test Cases},
	type = {{Ph.D.} dissertation},
	institution = {University of Massachusetts, Amherst},
	date = {September, 2015},
    year = {2015},
	url = {http://scholarworks.umass.edu/dissertations_2/465/},
}

@inproceedings{Helmuth:2015:GECCO,
	author = {Thomas Helmuth and Lee Spector},
	NOeditor = {Many People},
	title = {General program synthesis benchmark suite},
	booktitle = {GECCO '15: Proceedings of the 2015 Conference on
	Genetic and Evolutionary Computation},
	date = {July, 2015},
	year = {2015},
	eventtitle = {Conference on Genetic and Evolutionary Computation},
	eventdate = {July, 2015},
	location = {Madrid, Spain},
	month = {July},
}

@INPROCEEDINGS{350042,
	author={Thomas B{\"a}ck},
	booktitle={Evolutionary Computation, 1994. IEEE World Congress on Computational Intelligence., Proceedings of the First IEEE Conference on},
	title={Selective pressure in evolutionary algorithms: a characterization of selection mechanisms},
	year={1994},
	month={Jun},
	pages={57-62 vol.1},
	keywords={genetic algorithms;probability;search problems;evolutionary algorithms;experimental investigation;exploration-exploitation tradeoff;genetic algorithm;linear ranking;proportional selection;search space;selection mechanisms;selection operators;selective pressure;simple unimodal objective function;theoretical results;tournament selection;Computer science;Electronic switching systems;Evolutionary computation;Genetic algorithms;Genetic mutations},
	doi={10.1109/ICEC.1994.350042},
}

@inproceedings{Blickle:1995:MAT:645514.658088,
 author = {Blickle, Tobias and Thiele, Lothar},
 title = {A Mathematical Analysis of Tournament Selection},
 booktitle = {Proceedings of the 6th International Conference on Genetic Algorithms},
 year = {1995},
 isbn = {1-55860-370-0},
 pages = {9--16},
 numpages = {8},
 url = {http://dl.acm.org/citation.cfm?id=645514.658088},
 acmid = {658088},
 publisher = {Morgan Kaufmann Publishers Inc.},
 address = {San Francisco, CA, USA},
} 

@incollection{McPhee:2015:GPTP,
    author = {Nicholas Freitag McPhee and David Donatucci and Thomas Helmuth},
    title = {Using Graph Databases to Explore the Dynamics of Genetic Programming Runs},
    booktitle = {Genetic Programming Theory and Practice XIII},
    year = {2015},
    editor = {?},
    series = {Genetic and Evolutionary Computation},
    publisher = {Springer},
    pubstate = {In press}
}

@inproceedings{Starosta:1986:LPL:991365.991400,
	author = {Starosta, Stanley and Nomura, Hirosato},
	title = {Lexicase Parsing: A Lexicon-driven Approach to Syntactic Analysis},
	booktitle = {Proceedings of the 11th Coference on Computational Linguistics},
	series = {COLING '86},
	year = {1986},
	location = {Bonn, Germany},
	pages = {127--132},
	numpages = {6},
	url = {http://dx.doi.org/10.3115/991365.991400},
	doi = {10.3115/991365.991400},
	acmid = {991400},
	publisher = {Association for Computational Linguistics},
	address = {Stroudsburg, PA, USA},
} 

@book{starosta1988case,
	title={The Case for Lexicase: An Outline of Lexicase Grammatical Theory},
	author={Starosta, S.},
	isbn={9780861876396},
	lccn={87032794},
	series={Open linguistics series},
	url={http://books.google.com/books?id=Tl9iAAAAMAAJ},
	year={1988},
	publisher={Pinter Publishers}
}

@InCollection{Krawiec:2015:GPTP,
	author =       "Krawiec, Krzysztof and Swan, Jerry and O'Reilly, Una-May",
	title =        "Behavioral Program Synthesis: Insights and Prospects",
	booktitle =    "Genetic Programming Theory and Practice XIII",
	year =         "2015",
	series =       "Genetic and Evolutionary Computation",
	publisher =    "Springer"
}

@InProceedings{Helmuth:2014:GECCO,
	author =	"Thomas Helmuth and Lee Spector",
	title =	"Word count as a traditional programming benchmark
	problem for genetic programming",
	booktitle =	"GECCO '14: Proceedings of the 2014 conference on
	Genetic and evolutionary computation",
	year = 	"2014",
	NOeditor =	"Christian Igel and Dirk V. Arnold and Christian Gagne
	and Elena Popovici and Anne Auger and Jaume Bacardit
	and Dimo Brockhoff and Stefano Cagnoni and Kalyanmoy
	Deb and Benjamin Doerr and James Foster and Tobias
	Glasmachers and Emma Hart and Malcolm I. Heywood and
	Hitoshi Iba and Christian Jacob and Thomas Jansen and
	Yaochu Jin and Marouane Kessentini and Joshua D.
	Knowles and William B. Langdon and Pedro Larranaga and
	Sean Luke and Gabriel Luque and John A. W. McCall and
	Marco A. {Montes de Oca} and Alison Motsinger-Reif and
	Yew Soon Ong and Michael Palmer and Konstantinos E.
	Parsopoulos and Guenther Raidl and Sebastian Risi and
	Guenther Ruhe and Tom Schaul and Thomas Schmickl and
	Bernhard Sendhoff and Kenneth O. Stanley and Thomas
	Stuetzle and Dirk Thierens and Julian Togelius and
	Carsten Witt and Christine Zarges",
	isbn13 =	"978-1-4503-2662-9",
	pages =	"919--926",
	keywords =	"genetic algorithms, genetic programming",
	month =	"12-16 " # jul,
	organisation = "SIGEVO",
	address =	"Vancouver, BC, Canada",
	URL =  	"http://doi.acm.org/10.1145/2576768.2598230",
	doi =  	"doi:10.1145/2576768.2598230",
	publisher =	"ACM",
	publisher_address = "New York, NY, USA",
	abstract =	"The Unix utility program wc, which stands for word
	count, takes any number of files and prints the number
	of newlines, words, and characters in each of the
	files. We show that genetic programming can find
	programs that replicate the core functionality of the
	wc utility, and propose this problem as a traditional
	programming benchmark for genetic programming systems.
	This wc problem features key elements of programming
	tasks that often confront human programmers, including
	requirements for multiple data types, a large
	instruction set, control flow, and multiple outputs.
	Furthermore, it mimics the behavior of a real-world
	utility program, showing that genetic programming can
	automatically synthesize programs with general utility.
	We suggest statistical procedures that should be used
	to compare performances of different systems on
	traditional programming problems such as the wc
	problem, and present the results of a short experiment
	using the problem. Finally, we give a short analysis of
	evolved solution programs, showing how they make use of
	traditional programming concepts.",
	notes =	"Also known as \cite{2598230} GECCO-2014 A joint
	meeting of the twenty third international conference on
	genetic algorithms (ICGA-2014) and the nineteenth
	annual genetic programming conference (GP-2014)",
	doi-url =	"http://dx.doi.org/10.1145/2576768.2598230",
}

@InProceedings{Krawiec:2015:GECCO:smgpWorkshop,
	author =	"Pawe{\l} Liskowski and Krzysztof Krawiec and Thomas Helmuth and Lee Spector",
	title =	"Comparison of Semantic-aware Selection Methods in Genetic Programming",
	booktitle =	"GECCO 2015 workshop on Semantic Methods in Genetic Programming",
	year = 	"2015",
	publisher =	"ACM",
}

@InProceedings{Helmuth:2013:GECCOcomp,
	author =	"Thomas Helmuth and Lee Spector",
	title =	"Evolving a digital multiplier with the pushgp genetic
	programming system",
	booktitle =	"GECCO '13 Companion: Proceeding of the fifteenth
	annual conference companion on Genetic and evolutionary
	computation conference companion",
	year = 	"2013",
	TooManyeditor =	"Christian Blum and Enrique Alba and Thomas
	Bartz-Beielstein and Daniele Loiacono and Francisco
	Luna and Joern Mehnen and Gabriela Ochoa and Mike
	Preuss and Emilia Tantar and Leonardo Vanneschi",
	isbn13 =	"978-1-4503-1964-5",
	keywords =	"genetic algorithms, genetic programming",
	pages =	"1627--1634",
	month =	"6-10 " # jul,
	organisation = "SIGEVO",
	address =	"Amsterdam, The Netherlands",
	doi =  	"doi:10.1145/2464576.2466814",
	publisher =	"ACM",
	publisher_address = "New York, NY, USA",
	abstract =	"A recent article on benchmark problems for genetic
	programming suggested that researchers focus attention
	on the digital multiplier problem, also known as the
	multiple output multiplier problem, in part because it
	is scalable and in part because the requirement of
	multiple outputs presents challenges for some forms of
	genetic programming [20]. Here we demonstrate the
	application of stack-based genetic programming to the
	digital multiplier problem using the PushGP genetic
	programming system, which evolves programs expressed in
	the stack-based Push programming language. We
	demonstrate the use of output instructions and argue
	that they provide a natural mechanism for producing
	multiple outputs in a stack-based genetic programming
	context. We also show how two recent developments in
	PushGP dramatically improve the performance of the
	system on the digital multiplier problem. These
	developments are the ULTRA genetic operator, which
	produces offspring via Uniform Linear Transformation
	with Repair and Alternation [12], and lexicase
	selection, which selects parents according to
	performance on cases considered sequentially in random
	order [11]. Our results using these techniques show not
	only their utility, but also the utility of the digital
	multiplier problem as a benchmark problem for genetic
	programming research. The results also demonstrate the
	exibility of stack-based genetic programming for
	solving problems with multiple outputs and for serving
	as a platform for experimentation with new genetic
	programming techniques.",
	notes =	"Also known as \cite{2466814} Distributed at
	GECCO-2013.",
	doi-url =	"http://dx.doi.org/10.1145/2464576.2466814",
}

@InProceedings{Spector:2012:GECCOcompANEW,
  author =	"Lee Spector",
  title =	"Assessment of Problem Modality by Differential
		 Performance of Lexicase Selection in Genetic
		 Programming: {A} Preliminary Report",
  booktitle =	"1st workshop on Understanding Problems (GECCO-UP)",
  year = 	"2012",
  NOeditor =	"Kent McClymont and Ed Keedwell",
  isbn13 =	"978-1-4503-1178-6",
  keywords =	"genetic algorithms, genetic programming, modal
		 problems, selection, lexicase selection, problem
		 metrics, modality",
  pages =	"401--408",
  month =	"7-11 " # jul,
  organisation = "SIGEVO",
  address =	"Philadelphia, Pennsylvania, USA",
  NOURL =  	"http://hampshire.edu/lspector/pubs/wk09p4-spector.pdf",
  doi =  	"doi:10.1145/2330784.2330846",
  publisher =	"ACM",
  publisher_address = "New York, NY, USA",
  size = 	"8 pages",
  abstract =	"Many potential target problems for genetic programming
		 are modal in the sense that qualitatively different
		 modes of response are required for inputs from
		 different regions of the problem's domain. This paper
		 presents a new approach to solving modal problems with
		 genetic programming, using a simple and novel parent
		 selection method called lexicase selection. It then
		 shows how the differential performance of genetic
		 programming with and without lexicase selection can be
		 used to provide a measure of problem modality, and it
		 argues that defining such a measure in this way is not
		 as methodologically problematic as it may initially
		 appear. The modality measure is illustrated through the
		 analysis of genetic programming runs on a simple modal
		 symbolic regression problem. This is a preliminary
		 report that is intended in part to stimulate discussion
		 on the significance of modal problems, methods for
		 solving them, and methods for measuring the modality of
		 problems. Although the core concepts in this paper are
		 presented in the context of genetic programming, they
		 are also relevant to applications of other forms of
		 evolutionary computation to modal problems.",
  notes =	"p403 'allowing the high-performing individual [on any
		 test case] to contribute to the following generation,
		 regardless of [its] performance on other cases.' p405
		 'with population size 10000 the overall cost of
		 producing offspring using lexicase selection can exceed
		 that of using ordinary tournaments by between one and
		 two orders of magnitude'. (why?) Section 5: integer
		 symbolic regresions with one, two or three 'modes'.
		 Clojure lexicase.clj
		 https://gist.github.com/lspector/2320883 Also known as
		 \cite{2330846} Distributed at GECCO-2012. ACM Order
		 Number 910122.",
  doi-url =	"http://dx.doi.org/10.1145/2330784.2330846",
}